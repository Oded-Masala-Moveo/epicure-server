"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpErrorMessage = exports.HttpStatusCode = void 0;
var HttpStatusCode;
(function (HttpStatusCode) {
    HttpStatusCode[HttpStatusCode["OK"] = 200] = "OK";
    HttpStatusCode[HttpStatusCode["CREATED"] = 201] = "CREATED";
    HttpStatusCode[HttpStatusCode["NO_CONTENT"] = 204] = "NO_CONTENT";
    HttpStatusCode[HttpStatusCode["MOVED_PERMANENTLY"] = 301] = "MOVED_PERMANENTLY";
    HttpStatusCode[HttpStatusCode["FOUND"] = 302] = "FOUND";
    HttpStatusCode[HttpStatusCode["NOT_MODIFIED"] = 304] = "NOT_MODIFIED";
    HttpStatusCode[HttpStatusCode["BAD_REQUEST"] = 400] = "BAD_REQUEST";
    HttpStatusCode[HttpStatusCode["UNAUTHORIZED"] = 401] = "UNAUTHORIZED";
    HttpStatusCode[HttpStatusCode["FORBIDDEN"] = 403] = "FORBIDDEN";
    HttpStatusCode[HttpStatusCode["NOT_FOUND"] = 404] = "NOT_FOUND";
    HttpStatusCode[HttpStatusCode["METHOD_NOT_ALLOWED"] = 405] = "METHOD_NOT_ALLOWED";
    HttpStatusCode[HttpStatusCode["NOT_ACCEPTABLE"] = 406] = "NOT_ACCEPTABLE";
    HttpStatusCode[HttpStatusCode["REQUEST_TIMEOUT"] = 408] = "REQUEST_TIMEOUT";
    HttpStatusCode[HttpStatusCode["PAYLOAD_TOO_LARGE"] = 413] = "PAYLOAD_TOO_LARGE";
    HttpStatusCode[HttpStatusCode["UNSUPPORTED_MEDIA_TYPE"] = 415] = "UNSUPPORTED_MEDIA_TYPE";
    HttpStatusCode[HttpStatusCode["UNPROCESSABLE_ENTITY"] = 422] = "UNPROCESSABLE_ENTITY";
    HttpStatusCode[HttpStatusCode["INTERNAL_SERVER_ERROR"] = 500] = "INTERNAL_SERVER_ERROR";
    HttpStatusCode[HttpStatusCode["BAD_GATEWAY"] = 502] = "BAD_GATEWAY";
    HttpStatusCode[HttpStatusCode["SERVICE_UNAVAILABLE"] = 503] = "SERVICE_UNAVAILABLE";
    HttpStatusCode[HttpStatusCode["GATEWAY_TIMEOUT"] = 504] = "GATEWAY_TIMEOUT";
})(HttpStatusCode = exports.HttpStatusCode || (exports.HttpStatusCode = {}));
var HttpErrorMessage;
(function (HttpErrorMessage) {
    HttpErrorMessage["OK"] = "The request has succeeded";
    HttpErrorMessage["CREATED"] = "The request has been fulfilled and a new resource has been created";
    HttpErrorMessage["NO_CONTENT"] = "The request has been successfully processed but has no response body";
    HttpErrorMessage["MOVED_PERMANENTLY"] = "The requested resource has been permanently moved to a new URL";
    HttpErrorMessage["FOUND"] = "The requested resource has been temporarily moved to a new URL";
    HttpErrorMessage["NOT_MODIFIED"] = "The requested resource has not been modified since the last time it was requested";
    HttpErrorMessage["BAD_REQUEST"] = "The server cannot or will not process the request due to an apparent client error";
    HttpErrorMessage["UNAUTHORIZED"] = "The request requires authentication";
    HttpErrorMessage["FORBIDDEN"] = "The server understands the request, but refuses to authorize it";
    HttpErrorMessage["NOT_FOUND"] = "The requested resource could not be found on the server";
    HttpErrorMessage["METHOD_NOT_ALLOWED"] = "The method specified in the request is not allowed";
    HttpErrorMessage["NOT_ACCEPTABLE"] = "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request";
    HttpErrorMessage["REQUEST_TIMEOUT"] = "The server timed out waiting for the request";
    HttpErrorMessage["PAYLOAD_TOO_LARGE"] = "The request is larger than the server is willing or able to process";
    HttpErrorMessage["UNSUPPORTED_MEDIA_TYPE"] = "The request entity has a media type which the server or resource does not support";
    HttpErrorMessage["UNPROCESSABLE_ENTITY"] = "The request was well-formed but was unable to be followed due to semantic errors";
    HttpErrorMessage["INTERNAL_SERVER_ERROR"] = "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable";
    HttpErrorMessage["BAD_GATEWAY"] = "The server was acting as a gateway or proxy and received an invalid response from the upstream server";
    HttpErrorMessage["SERVICE_UNAVAILABLE"] = "The server is currently unable to handle the request due to a temporary overload or maintenance of the server";
    HttpErrorMessage["GATEWAY_TIMEOUT"] = "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server";
})(HttpErrorMessage = exports.HttpErrorMessage || (exports.HttpErrorMessage = {}));
//# sourceMappingURL=error.model.js.map